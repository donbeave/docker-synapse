#!/usr/bin/env bash

generate_turn_key() {
	local turnkey="${1}"
	local filepath="${2}"

	echo "lt-cred-mech" > "${filepath}"
	echo "use-auth-secret" >> "${filepath}"
	echo "static-auth-secret=${turnkey}" >> "${filepath}"
	echo "realm=turn.${SERVER_NAME}" >> "${filepath}"
	echo "cert=/data/${SERVER_NAME}.tls.crt" >> "${filepath}"
	echo "pkey=/data/${SERVER_NAME}.tls.key" >> "${filepath}"
	echo "dh-file=/data/${SERVER_NAME}.tls.dh" >> "${filepath}"
	echo "cipher-list=\"HIGH\"" >> "${filepath}"
}

generate_synapse_file() {
	local filepath="${1}"

	python -m synapse.app.homeserver \
	       --config-path "${filepath}" \
	       --generate-config \
	       --report-stats ${REPORT_STATS} \
	       --server-name ${SERVER_NAME}
}

# will remove later
deprecated_configure_yaml() {
	local turnkey="${1}"
	local filepath="${2}"

	local ymltemp="$(mktemp)"

	awk -v TURNURIES="turn_uris: [\"turn:${SERVER_NAME}:3478?transport=udp\", \"turn:${SERVER_NAME}:3478?transport=tcp\"]" \
	    -v TURNSHAREDSECRET="turn_shared_secret: \"${turnkey}\"" \
	    '{
		sub(/turn_shared_secret: "YOUR_SHARED_SECRET"/, TURNSHAREDSECRET);
		sub(/turn_uris: \[\]/, TURNURIES);
		print;
	    }' "${filepath}" > "${ymltemp}"

	mv ${ymltemp} "${filepath}"
}

# ${SERVER_NAME}.log.config is autogenerated via --generate-config
configure_log_config() {
	sed -i "s|.*filename:\s/homeserver.log|    filename: /data/homeserver.log|g" "/data/${SERVER_NAME}.log.config"
}

generate_config() {
	breakup="0"

	if [ -z "${SERVER_NAME}" ]; then
		echo "SERVER_NAME not set, 'localhost' by default"
		export SERVER_NAME="localhost"
	fi

	if [ -z "${REPORT_STATS}" ]; then
		echo "REPORT_STATS not set, 'yes' by default"
		export REPORT_STATS="yes"
	fi

	if [ -z "${REGISTRATION_ENABLED}" ]; then
		echo "REGISTRATION_ENABLED not set, 'yes' by default"
		export REGISTRATION_ENABLED="yes"
	fi

	[[ "${REPORT_STATS}" != "yes" ]] && [[ "${REPORT_STATS}" != "no" ]] && \
		echo "STOP! REPORT_STATS needs to be 'no' or 'yes'" && breakup="1"

	[[ "${REGISTRATION_ENABLED}" != "yes" ]] && [[ "${REGISTRATION_ENABLED}" != "no" ]] && \
		echo "STOP! REGISTRATION_ENABLED needs to be 'no' or 'yes'" && breakup="1"

	[[ "${breakup}" == "1" ]] && exit 1

	echo "-=> generate turn config"
	turnkey=$(pwgen -s 64 1)
	generate_turn_key $turnkey /data/turnserver.conf

	echo "-=> generate synapse config"
	generate_synapse_file /data/homeserver.tmp

	echo "-=> configure some settings in homeserver.yaml"
	deprecated_configure_yaml $turnkey /data/homeserver.tmp

	mv /data/homeserver.tmp /data/homeserver.yaml

	/home_server_config.py

	echo "-=> configure some settings in ${SERVER_NAME}.log.config"
	configure_log_config

	echo ""
	echo "-=> you have to review the generated configuration file homeserver.yaml:"

	cat /data/homeserver.yaml
}

if [ "$1" = 'start' ]; then
	if [ ! -f /data/homeserver.yaml ]; then
		generate_config
	fi

	if [ -f /data/turnserver.conf ]; then
		echo "-=> start turn"
		if [ -f /conf/supervisord-turnserver.conf.deactivated ]; then
			mv -f /conf/supervisord-turnserver.conf.deactivated /conf/supervisord-turnserver.conf
		fi
	else
		if [ -f /conf/supervisord-turnserver.conf ]; then
			mv -f /conf/supervisord-turnserver.conf /conf/supervisord-turnserver.conf.deactivated
		fi
	fi

	echo "-=> start matrix"
	chown -R synapse:synapse /data
	chown -R synapse:synapse /uploads
	chmod a+rwx /run
	exec supervisord -c /supervisord.conf
fi

if [ "$1" = 'diff' ]; then
	echo "-=> Diff between local configfile and a fresh generated config file"
	echo "-=>      some values are different in technical point of view, like"
	echo "-=>      autogenerated secret keys etc..."

	DIFFPARAMS="${DIFFPARAMS:-Naur}"
	SERVER_NAME="${SERVER_NAME:-demo_server_name}"
	REPORT_STATS="${REPORT_STATS:-no_or_yes}"
	export SERVER_NAME REPORT_STATS

	generate_synapse_file /tmp/homeserver.synapse.yaml
	diff -${DIFFPARAMS} /tmp/homeserver.synapse.yaml /data/homeserver.yaml
fi

if [ "$1" = 'generate' ]; then
	generate_config
fi

exec "$@"
